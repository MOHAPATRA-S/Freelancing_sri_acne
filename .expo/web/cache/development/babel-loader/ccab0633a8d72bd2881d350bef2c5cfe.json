{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/thinksysuser/Desktop/swagatika/Freelancing_sri_acne/app/App.js\";\nimport React, { Component, useState, Fragment, useEffect, useRef } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Video } from \"expo-av\";\nimport CameraApp from \"./component/cameraApp\";\nimport Results from \"./component/results\";\nimport UploadS3 from \"./component/uploadS3\";\nimport Terms from \"./component/terms\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nvar Stack = createStackNavigator();\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nexport function App(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  console.log(\"Inside the app functions =>\");\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(CameraApp, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n}\nexport default function Navigator() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"App\",\n    screenOptions: {\n      headerShown: false,\n      headerTransparent: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"App\",\n    component: App,\n    options: {\n      headerTransparent: true,\n      headerShown: false\n    },\n    screenOptions: {\n      headerShown: false,\n      headerTransparent: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"CameraApp\",\n    component: CameraApp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Results\",\n    component: Results,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"UploadS3\",\n    component: UploadS3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Terms\",\n    component: Terms,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/thinksysuser/Desktop/swagatika/Freelancing_sri_acne/app/App.js"],"names":["React","Component","useState","Fragment","useEffect","useRef","Video","CameraApp","Results","UploadS3","Terms","NavigationContainer","createStackNavigator","Stack","Dimensions","get","width","height","App","navigation","text","setText","console","log","flex","Navigator","headerShown","headerTransparent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,EAA+CC,SAA/C,EAA0DC,MAA1D,QAAwE,OAAxE;;;;;;;;;AAcA,SAASC,KAAT,QAAsB,SAAtB;AAEA,OAAOC,SAAP;AACA,OAAOC,OAAP;AACA,OAAOC,QAAP;AACA,OAAOC,KAAP;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,IAAMC,KAAK,GAAGD,oBAAoB,EAAlC;;AAEA,sBAA0BE,UAAU,CAACC,GAAX,CAAe,QAAf,CAA1B;AAAA,IAAQC,KAAR,mBAAQA,KAAR;AAAA,IAAeC,MAAf,mBAAeA,MAAf;;AAEA,OAAO,SAASC,GAAT,OAA6B;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAClC,kBAAwBjB,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOkB,IAAP;AAAA,MAAaC,OAAb;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AAEA,SACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAEL,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAeD;AAED,eAAe,SAASM,SAAT,GAAqB;AAClC,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AACE,IAAA,gBAAgB,EAAC,KADnB;AAEE,IAAA,aAAa,EAAE;AACbC,MAAAA,WAAW,EAAE,KADA;AAEbC,MAAAA,iBAAiB,EAAE;AAFN,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,KADP;AAEE,IAAA,SAAS,EAAET,GAFb;AAGE,IAAA,OAAO,EAAE;AACPS,MAAAA,iBAAiB,EAAE,IADZ;AAEPD,MAAAA,WAAW,EAAE;AAFN,KAHX;AAwBE,IAAA,aAAa,EAAE;AACbA,MAAAA,WAAW,EAAE,KADA;AAEbC,MAAAA,iBAAiB,EAAE;AAFN,KAxBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAqCE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,WAAnB;AAA+B,IAAA,SAAS,EAAEpB,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArCF,EAsCE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,SAAnB;AAA6B,IAAA,SAAS,EAAEC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtCF,EAuCE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAEC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCF,EAwCE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxCF,CADF,CADF;AAgDD","sourcesContent":["import React, { Component, useState, Fragment, useEffect, useRef } from \"react\";\n\nimport {\n  Platform,\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n  TextInput,\n  // Button,\n  Image,\n  TouchableOpacity,\n} from \"react-native\";\n\nimport { Video } from \"expo-av\";\n\nimport CameraApp from \"./component/cameraApp\";\nimport Results from \"./component/results\";\nimport UploadS3 from \"./component/uploadS3\";\nimport Terms from \"./component/terms\"\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nconst Stack = createStackNavigator();\n\nconst { width, height } = Dimensions.get(\"window\");\n\nexport function App({ navigation }) {\n  const [text, setText] = useState(\"\");\n\n  console.log(\"Inside the app functions =>\");\n\n  return (\n    <View\n      style={{\n        flex: 1,\n      }}\n    //   style={{\n    //     flex: 1,\n    //     justifyContent: \"center\",\n    //     alignItems: \"center\",\n    //   }}\n    >\n      {/* <Text>Testing here</Text> */}\n      <CameraApp navigation={navigation}></CameraApp>\n    </View>\n  );\n}\n\nexport default function Navigator() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        initialRouteName=\"App\"\n        screenOptions={{\n          headerShown: false,\n          headerTransparent: true,\n        }}\n      >\n        <Stack.Screen\n          name=\"App\"\n          component={App}\n          options={{\n            headerTransparent: true,\n            headerShown: false,\n            // headerStyle: {\n            //   style: {\n            //     position: \"absolute\",\n            //     backgroundColor: \"transparent\",\n            //     zIndex: 100,\n            //     top: 0,\n            //     left: 0,\n            //     right: 0,\n            //   },\n            // },\n            // headerBackground: () => (\n            //   <BlurView\n            //     tint=\"light\"\n            //     intensity={0}\n            //     style={StyleSheet.absoluteFill}\n            //   />\n            // ),\n          }}\n          screenOptions={{\n            headerShown: false,\n            headerTransparent: true,\n          }}\n        />\n\n        <Stack.Screen name=\"CameraApp\" component={CameraApp}></Stack.Screen>\n        <Stack.Screen name=\"Results\" component={Results}></Stack.Screen>\n        <Stack.Screen name=\"UploadS3\" component={UploadS3}></Stack.Screen>\n        <Stack.Screen name=\"Terms\" component={Terms}></Stack.Screen>\n\n        {/* UploadS3 */}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}